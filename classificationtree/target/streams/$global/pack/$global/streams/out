[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Creating a distributable package in target/pack[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Copying libraries to target/pack/lib[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] project jars:[0m
[0m[[0m[0minfo[0m] [0m[0mtarget/scala-2.12/classificationtree_2.12-0.1.jar[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] project dependencies:[0m
[0m[[0m[0minfo[0m] [0m[0mxerces:xmlParserAPIs:2.6.2[0m
[0m[[0m[0minfo[0m] [0m[0mlog4j:log4j:1.2.12[0m
[0m[[0m[0minfo[0m] [0m[0moscar:oscar-algo_2.12:4.0.0-SNAPSHOT[0m
[0m[[0m[0minfo[0m] [0m[0morg.apache.commons:commons-math:2.1[0m
[0m[[0m[0minfo[0m] [0m[0morg.swinglabs:swingx-ws:1.0[0m
[0m[[0m[0minfo[0m] [0m[0mnet.sf.ezmorph:ezmorph:0.8.1[0m
[0m[[0m[0minfo[0m] [0m[0morg.graphstream:mbox2:1.0[0m
[0m[[0m[0minfo[0m] [0m[0morg.scala-lang:scala-reflect:2.12.8[0m
[0m[[0m[0minfo[0m] [0m[0mxalan:xalan:2.7.0[0m
[0m[[0m[0minfo[0m] [0m[0mavalon-framework:avalon-framework:4.1.3[0m
[0m[[0m[0minfo[0m] [0m[0morg.scala-lang.modules:scala-java8-compat_2.12:0.8.0[0m
[0m[[0m[0minfo[0m] [0m[0morg.scala-lang.modules:scala-xml_2.12:2.0.0-M1[0m
[0m[[0m[0minfo[0m] [0m[0morg.jfree:jfreechart:1.5.0[0m
[0m[[0m[0minfo[0m] [0m[0morg.apache.commons:commons-math3:3.4.1[0m
[0m[[0m[0minfo[0m] [0m[0mrome:rome:0.8[0m
[0m[[0m[0minfo[0m] [0m[0moscar:oscar-cp-xcsp3_2.12:4.0.0-SNAPSHOT[0m
[0m[[0m[0minfo[0m] [0m[0mjaxen:jaxen:1.1-beta-8[0m
[0m[[0m[0minfo[0m] [0m[0morg.rogach:scallop_2.11:1.0.0[0m
[0m[[0m[0minfo[0m] [0m[0mjavax.servlet:servlet-api:2.3[0m
[0m[[0m[0minfo[0m] [0m[0mcommons-httpclient:commons-httpclient:3.0.1[0m
[0m[[0m[0minfo[0m] [0m[0morg.scala-lang:scala-library:2.12.8[0m
[0m[[0m[0minfo[0m] [0m[0moscar:oscar-cp_2.12:4.0.0-SNAPSHOT[0m
[0m[[0m[0minfo[0m] [0m[0mdom4j:dom4j:1.6.1[0m
[0m[[0m[0minfo[0m] [0m[0moscar:oscar-visual_2.12:4.0.0-SNAPSHOT[0m
[0m[[0m[0minfo[0m] [0m[0mcom.jhlabs:filters:2.0.235[0m
[0m[[0m[0minfo[0m] [0m[0morg.graphstream:gs-core:1.3[0m
[0m[[0m[0minfo[0m] [0m[0mcommons-beanutils:commons-beanutils:1.7.0[0m
[0m[[0m[0minfo[0m] [0m[0morg.scala-lang.modules:scala-parser-combinators_2.12:1.1.2[0m
[0m[[0m[0minfo[0m] [0m[0mxerces:xercesImpl:2.8.1[0m
[0m[[0m[0minfo[0m] [0m[0mcommons-lang:commons-lang:2.2[0m
[0m[[0m[0minfo[0m] [0m[0mcom.typesafe.akka:akka-actor_2.12:2.5.6[0m
[0m[[0m[0minfo[0m] [0m[0morg.graphstream:pherd:1.0[0m
[0m[[0m[0minfo[0m] [0m[0morg.jfree:jcommon:1.0.24[0m
[0m[[0m[0minfo[0m] [0m[0moscar:oscar-util_2.12:4.0.0-SNAPSHOT[0m
[0m[[0m[0minfo[0m] [0m[0morg.scalactic:scalactic_2.12:3.0.4[0m
[0m[[0m[0minfo[0m] [0m[0mjunit:junit:4.12[0m
[0m[[0m[0minfo[0m] [0m[0mcommons-logging:commons-logging:1.1[0m
[0m[[0m[0minfo[0m] [0m[0mxom:xom:1.1[0m
[0m[[0m[0minfo[0m] [0m[0mlogkit:logkit:1.0.1[0m
[0m[[0m[0minfo[0m] [0m[0morg.hamcrest:hamcrest-core:1.3[0m
[0m[[0m[0minfo[0m] [0m[0mxcsp3:xcsp3:1.0.0-SNAPSHOT[0m
[0m[[0m[0minfo[0m] [0m[0mcom.typesafe:config:1.3.1[0m
[0m[[0m[0minfo[0m] [0m[0moscar:oscar-modeling_2.12:4.0.0-SNAPSHOT[0m
[0m[[0m[0minfo[0m] [0m[0morg.graphstream:gs-algo:1.3[0m
[0m[[0m[0minfo[0m] [0m[0morg.graphstream:gs-ui:1.3[0m
[0m[[0m[0minfo[0m] [0m[0mnet.sf.json-lib:json-lib:0.9[0m
[0m[[0m[0minfo[0m] [0m[0mjdom:jdom:1.0[0m
[0m[[0m[0minfo[0m] [0m[0morg.swinglabs:swing-worker:1.1[0m
[0m[[0m[0minfo[0m] [0m[0morg.swinglabs:swingx:1.0[0m
[0m[[0m[0minfo[0m] [0m[0mcommons-codec:commons-codec:1.3[0m
[0m[[0m[0minfo[0m] [0m[0morg.scala-lang.modules:scala-swing_2.12:2.1.1[0m
[0m[[0m[0minfo[0m] [0m[0mjtidy:jtidy:4aug2000r7-dev[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] unmanaged dependencies:[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] explicit dependencies:[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Create a bin folder: target/pack/bin[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating launch scripts[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] main class for data-format: DataFormat[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/data-format[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/data-format.bat[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] main class for testing: testing[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/testing[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/testing.bat[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] main class for cp-decision-tree: CPDecisionTree[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/cp-decision-tree[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/cp-decision-tree.bat[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] main class for data-sampler: DataSampler[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/data-sampler[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/data-sampler.bat[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] main class for create-samples: createSamples[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/create-samples[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/bin/create-samples.bat[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] packed resource directories = /home/users/general/gnanfack/doctorat_unamur/constraint_dt/benchmarking_osdt_binoct/classificationtree/src/pack[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/Makefile[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] Generating target/pack/VERSION[0m
[0m[[0m[0minfo[0m] [0m[0m[classificationtree] done.[0m
